{"version":3,"sources":["components/layout/Navbar.js","utils/notification.js","redux/actions/contactActions.js","redux/reducers/contactReducer.js","components/contacts/ContactItem.js","components/contacts/Contacts.js","components/contacts/ContactForm.js","components/contacts/ContactFilter.js","components/pages/Home.js","components/pages/About.js","redux/actions/authAcitons.js","redux/reducers/authReducer.js","components/auth/Register.js","components/auth/Login.js","components/routing/PrivateRoute.js","App.js","store.js","index.js"],"names":["Navbar","title","icon","location","useLocation","authLinks","onClick","localStorage","removeItem","to","className","guestLinks","pathname","defaultProps","openNotificationWithIcon","type","msg","descriptiond","notification","message","description","getContacts","createAsyncThunk","navigate","thunkAPI","a","token","getItem","config","headers","Authorization","axios","get","res","data","contacts","response","toString","rejectWithValue","createContact","post","updateContact","name","email","phone","_id","patch","deleteContact","id","delete","contactSlice","createSlice","initialState","isLoading","isSuccess","isError","isMessage","isLoadingContactCreate","isSuccessContactCreate","isErrorContactCreate","isMessageContactCreate","isErrorContactDelete","contactDetails","filterValue","reducers","reset","state","action","setContact","payload","setFilterValue","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","ContactItem","contact","dispatch","useDispatch","style","float","charAt","toUpperCase","slice","Contacts","useSelector","useNavigate","useEffect","filterData","filter","fil","length","spinning","TransitionGroup","map","CSSTransition","timeout","classNames","status","subTitle","initialContact","ContactForm","useState","onChange","e","target","value","onSubmit","preventDefault","placeholder","checked","ContactFilter","Home","About","login","signUp","authSlice","setItem","Register","props","auth","password","password2","user","setUser","username","confirmPassword","htmlFor","required","minLength","Login","PrivateRoute","Component","component","App","path","element","store","configureStore","reducer","authReducer","contactReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea29c65a.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Navbar = ({ title, icon }) => {\n  const location = useLocation()\n\n  const onLogout = () => {\n    localStorage.removeItem('token')\n  };\n\n  const authLinks = (\n    <Fragment>\n      {/* <li>Hello {user && user.name}</li> */}\n      <li>\n        <Link onClick={onLogout} to='/login'>\n          <i className='fas fa-sign-out-alt' />{' '}\n          <span className='hide-sm'>Logout</span>\n        </Link>\n      </li>\n    </Fragment>\n  );\n\n  const guestLinks = (\n    <Fragment>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </Fragment>\n  );\n\n  return (\n    <div className='navbar bg-primary'>\n      <h1>\n        <Link to='/'>\n          <i className={icon} /> {title}\n        </Link>\n      </h1>\n      <ul>{(location.pathname === '/login' || location.pathname === '/register' ) ?  guestLinks   : authLinks }</ul>\n\n    </div>\n  );\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string\n};\n\nNavbar.defaultProps = {\n  title: 'Contact Keeper',\n  icon: 'fas fa-id-card-alt'\n};\n\nexport default Navbar;\n","import { notification } from \"antd\";\r\n\r\nexport const openNotificationWithIcon = (type, msg, descriptiond) => {\r\n    notification[type]({\r\n      message: msg,\r\n      description: descriptiond,\r\n    });\r\n  };","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { openNotificationWithIcon } from \"../../utils/notification\";\r\n// const token = localStorage.getItem('token')\r\n\r\nexport const getContacts = createAsyncThunk(\r\n  \"contact/getContact\",\r\n  async (navigate, thunkAPI) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const res = await axios.get(\"/contacts\", config);\r\n\r\n      return res.data.contacts;\r\n    } catch (error) {\r\n      const message =\r\n        error?.response?.data?.message || error.message || error.toString();\r\n      if (message === \"Session expires login again!\" || message === \"Invalid token Please Login again!\") {\r\n        openNotificationWithIcon('error', 'Failed', message)\r\n        localStorage.removeItem(\"token\");\r\n        navigate('/login')\r\n      }\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createContact = createAsyncThunk(\r\n  \"contact/createContact\",\r\n  async (data, thunkAPI) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const res = await axios.post(\"/contacts\", data, config);\r\n      return res.data.message;\r\n    } catch (error) {\r\n      const message =\r\n        error?.response?.data?.message || error.message || error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateContact = createAsyncThunk(\r\n  \"contact/updateContact\",\r\n  async ({ name, email, phone, type, _id }, thunkAPI) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const res = await axios.patch(\r\n        `/contacts/${_id}`,\r\n        { name, email, phone, type },\r\n        config\r\n      );\r\n\r\n      return res.data.message;\r\n    } catch (error) {\r\n      const message =\r\n        error?.response?.data?.message || error.message || error.toString();\r\n      // const msg =\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contact/deleteContact\",\r\n  async (id, thunkAPI) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const res = await axios.delete(`/contacts/${id}`, config);\r\n      return res.data.message;\r\n    } catch (error) {\r\n      const message =\r\n        error?.response?.data?.message || error.message || error.toString();\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { getContacts, deleteContact, createContact, updateContact } from \"../actions/contactActions\";\r\n\r\nconst contactSlice = createSlice({\r\n    name: \"contact\",\r\n    initialState: {\r\n        isLoading: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        isMessage: null,\r\n        isLoadingContactCreate: false,\r\n        isSuccessContactCreate: false,\r\n        isErrorContactCreate: false,\r\n        isMessageContactCreate: null,\r\n        isErrorContactDelete: false,\r\n        contacts: [],\r\n        contactDetails: null,\r\n        filterValue: \"\"\r\n    },\r\n    reducers: {\r\n        reset: (state, action) => {\r\n            state.isLoading = false\r\n            state.isSuccess = false\r\n            state.isError = false\r\n            state.isMessage = false\r\n            state.isLoadingContactCreate = false\r\n            state.isSuccessContactCreate = false\r\n            state.isErrorContactCreate = false\r\n            state.isMessageContactCreate = null\r\n            state.isErrorContactDelete = false\r\n        },\r\n        setContact: (state, action) => {\r\n            state.contactDetails = action.payload\r\n        },\r\n        setFilterValue: (state, action) => {\r\n            state.filterValue = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(getContacts.pending, (state, action) =>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(getContacts.fulfilled, (state, action) =>{\r\n            state.isLoading = false\r\n            // state.isSuccess = true\r\n            state.contacts = action.payload\r\n        })\r\n        .addCase(getContacts.rejected, (state, action) =>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            // state.isMessage = action.payload\r\n        })\r\n        .addCase(createContact.pending, (state, action) =>{\r\n            state.isLoadingContactCreate = true\r\n        })\r\n        .addCase(createContact.fulfilled, (state, action) =>{\r\n            state.isLoadingContactCreate = false\r\n            state.isSuccessContactCreate = true\r\n            state.isMessageContactCreate = action.payload\r\n            // localStorage.setItem('token', action.payload)\r\n        })\r\n        .addCase(createContact.rejected, (state, action) =>{\r\n            state.isLoadingContactCreate = false\r\n            state.isErrorContactCreate = true\r\n            state.isMessageContactCreate = action.payload\r\n        })\r\n        .addCase(updateContact.pending, (state, action) =>{\r\n            state.isLoadingContactCreate = true\r\n        })\r\n        .addCase(updateContact.fulfilled, (state, action) =>{\r\n            state.isLoadingContactCreate = false\r\n            state.isSuccessContactCreate = true\r\n            state.isMessageContactCreate = action.payload\r\n            state.contactDetails = null\r\n            // localStorage.setItem('token', action.payload)\r\n        })\r\n        .addCase(updateContact.rejected, (state, action) =>{\r\n            state.isLoadingContactCreate = false\r\n            state.isErrorContactCreate = true\r\n            state.isMessageContactCreate = action.payload\r\n        })\r\n        .addCase(deleteContact.pending, (state, action) =>{\r\n            state.isLoading = true\r\n        })\r\n        .addCase(deleteContact.fulfilled, (state, action) =>{\r\n            state.isLoading = false\r\n            state.isSuccess = true\r\n            state.isMessage = action.payload\r\n            // localStorage.setItem('token', action.payload)\r\n        })\r\n        .addCase(deleteContact.rejected, (state, action) =>{\r\n            state.isLoading = false\r\n            state.isErrorContactDelete = true\r\n            state.isMessage = action.payload\r\n        })\r\n    }\r\n})\r\n\r\nexport const { reset, setContact, setFilterValue } = contactSlice.actions\r\nexport default contactSlice.reducer","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/actions/contactActions\";\nimport {  setContact } from \"../../redux/reducers/contactReducer\";\n\n\nconst ContactItem = ({ contact }) => {\n  const { _id, name, email, phone, type } = contact;\n  const dispatch = useDispatch()\n  \n  return (\n    <div className=\"card bg-light\">\n      <h3 className=\"text-primary text-left\">\n        {name}{\" \"}\n        <span\n          style={{ float: \"right\" }}\n          className={\n            \"badge \" +\n            (type === \"professional\" ? \"badge-success\" : \"badge-primary\")\n          }\n        >\n          {type.charAt(0).toUpperCase() + type.slice(1)}\n        </span>\n      </h3>\n      <ul className=\"list\">\n        {email && (\n          <li>\n            <i className=\"fas fa-envelope-open\" /> {email}\n          </li>\n        )}\n        {phone && (\n          <li>\n            <i className=\"fas fa-phone\" /> {phone}\n          </li>\n        )}\n      </ul>\n      <p>\n        <button\n          className=\"btn btn-dark btn-sm\"\n          onClick={() => dispatch(setContact(contact))}\n        >\n          Edit\n        </button>\n        <button\n          className=\"btn btn-danger btn-sm\"\n          onClick={() => dispatch(deleteContact(_id))}\n        >\n          Delete\n        </button>\n      </p>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default ContactItem;\n","import React, { useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport ContactItem from \"./ContactItem\";\nimport { getContacts } from \"../../redux/actions/contactActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Spin, Result } from \"antd\";\nimport { reset } from \"../../redux/reducers/contactReducer\";\nimport { openNotificationWithIcon } from \"../../utils/notification\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Contacts = () => {\n  const {\n    isLoading,\n    isSuccess,\n    isError,\n    isMessage,\n    isErrorContactDelete,\n    contacts,\n    filterValue,\n  } = useSelector((state) => state.contact);\n  const dispatch = useDispatch();\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (isSuccess) {\n      openNotificationWithIcon(\"success\", \"Success\", isMessage);\n    }\n    if (isErrorContactDelete) {\n      openNotificationWithIcon(\"error\", \"Failed\", isMessage);\n    }\n    dispatch(getContacts(navigate));\n    return () => dispatch(reset());\n  }, [isSuccess, isErrorContactDelete, dispatch, isMessage, navigate]);\n\n  const filterData = contacts.filter((fil) => {\n    if (filterValue)\n      return fil?.name === filterValue || fil?.phone === filterValue;\n    return fil;\n  });\n\n  if (contacts !== null && contacts.length === 0 && !isError) {\n    return <h4>Please add a contact</h4>;\n  }\n\n  return (\n    <Spin spinning={isLoading}>\n      <TransitionGroup>\n        {!isLoading &&\n          filterData?.map((contact) => (\n            <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\n              <ContactItem contact={contact} />\n            </CSSTransition>\n          ))}\n        {!isLoading && isError && (\n          <Result\n            status=\"500\"\n            title=\"500\"\n            subTitle=\"Sorry, something went wrong.\"\n          />\n        )}\n      </TransitionGroup>\n    </Spin>\n  );\n};\n\nexport default Contacts;\n","import React, { useState, useEffect } from \"react\";\nimport { createContact, getContacts, updateContact } from \"../../redux/actions/contactActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { reset } from \"../../redux/reducers/contactReducer\";\nimport { openNotificationWithIcon } from \"../../utils/notification\";\nimport { Spin } from \"antd\";\n\nconst initialContact = {\n  name: \"\",\n  email: \"\",\n  phone: \"\",\n  type: \"personal\",\n};\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState(initialContact);\n  const dispatch = useDispatch();\n  const {\n    isLoadingContactCreate,\n    isSuccessContactCreate,\n    isErrorContactCreate,\n    isMessageContactCreate,\n    contactDetails\n  } = useSelector((state) => state.contact);\n\n  const { name, email, phone, type } = contact;\n\n  const onChange = (e) =>\n    setContact({ ...contact, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (contactDetails === null) {\n    dispatch(createContact(contact));\n    } else {\n      dispatch(updateContact(contact))\n    }\n    // clearAll();\n  };\n\n  const clearAll = () => {\n    setContact({ name: \"\", email: \"\", phone: \"\", type: \"personal\" });\n  };\n\n  useEffect(() => {\n    if(contactDetails !== null) setContact(contactDetails)\n  },[contactDetails])\n\n  useEffect(() => {\n    if (isSuccessContactCreate) {\n      openNotificationWithIcon(\"success\", \"Success\", isMessageContactCreate);\n      dispatch(getContacts());\n      clearAll();\n    }\n    if (isErrorContactCreate) {\n      openNotificationWithIcon(\"error\", \"Failed\", isMessageContactCreate);\n    }\n    return () => dispatch(reset());\n  }, [isSuccessContactCreate, isErrorContactCreate, isMessageContactCreate, dispatch ]);\n\n  return (\n    <Spin spinning={isLoadingContactCreate}>\n      <form onSubmit={onSubmit}>\n        <h2 className=\"text-primary\">{contactDetails ? \"Update Contact\" : \"Add Contact\"}</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"name\"\n          value={name}\n          onChange={onChange}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Phone\"\n          name=\"phone\"\n          value={phone}\n          onChange={onChange}\n        />\n        <h4>Contact Type</h4>\n        <input\n          type=\"radio\"\n          name=\"type\"\n          value=\"personal\"\n          checked={type === \"personal\"}\n          onChange={onChange}\n        />{\" \"}\n        Personal{\" \"}\n        <input\n          type=\"radio\"\n          name=\"type\"\n          value=\"professional\"\n          checked={type === \"professional\"}\n          onChange={onChange}\n        />{\" \"}\n        Professional\n        <div>\n          <input\n            type=\"submit\"\n            value={contactDetails ? \"Update Contact\" : \"Add Contact\"}\n            className=\"btn btn-primary btn-block\"\n          />\n        </div>\n        {/* {current && ( */}\n        {/* <div>\n          <button className=\"btn btn-light btn-block\" onClick={clearAll}>\n            Clear\n          </button>\n        </div> */}\n        {/* )} */}\n      </form>\n    </Spin>\n  );\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { setFilterValue } from '../../redux/reducers/contactReducer';\nimport { useDispatch } from 'react-redux';\n\nconst ContactFilter = () => {\n  // we just need the conact dispatch without state.\n    const dispatch = useDispatch()\n\n  const onChange = (e) => {\n    if (e.target.value !== '') {\n      dispatch(setFilterValue(e.target.value))\n    } else {\n      dispatch(setFilterValue(\"\"))\n    }\n  };\n\n  return (\n    <form onSubmit={(e) => e.preventDefault()}>\n      <input type='text' placeholder='Filter Contacts...' onChange={onChange} />\n    </form>\n  );\n};\n\nexport default ContactFilter;\n","import React from 'react';\nimport Contacts from '../contacts/Contacts';\nimport ContactForm from '../contacts/ContactForm';\nimport ContactFilter from '../contacts/ContactFilter';\n\nconst Home = () => {\n  return (\n    <div className='grid-2'>\n      <div>\n        <ContactForm />\n      </div>\n      <div>\n        <ContactFilter />\n        <Contacts />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About This App</h1>\n      <p className='my-1'>\n        This is a full stack React app for keeping contacts\n      </p>\n      <p className='bg-dark p'>\n        <strong>Version: </strong> 1.0.0\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = createAsyncThunk('login/authLogin',  async (data, thunkAPI) => {\r\n    try {\r\n        const res = await axios.post('/login', data)\r\n        // console.log(res.data.token)\r\n        return res.data.token\r\n    } catch (error) {\r\n        const message = error?.response?.data?.message || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message)\r\n    }\r\n})\r\nexport const signUp = createAsyncThunk('signUp/authSignUp',  async (data, thunkAPI) => {\r\n    try {\r\n        const res = await axios.post('/signup', data)\r\n        return res.data.token\r\n    } catch (error) {\r\n        const message = error?.response?.data?.message || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message)\r\n    }\r\n})\r\n\r\n// export const logout = createAsyncThunk('logout/authLogout',  async (data, thunkAPI) => {\r\n//     try {\r\n//         const res = await axios.post('/signup', data)\r\n//         // console.log(res.data.token)\r\n//         return res.data.token\r\n//     } catch (error) {\r\n//         const message = error?.response?.data?.message || error.message || error.toString()\r\n//         return thunkAPI.rejectWithValue(message)\r\n//     }\r\n// })","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { login, signUp } from \"../actions/authAcitons\";\r\n\r\nconst authSlice = createSlice({\r\n    name: \"authrd\",\r\n    initialState: {\r\n        isLoading: false,\r\n        isSuccess: false,\r\n        isError: false,\r\n        isMessage: null\r\n    },\r\n    reducers: {\r\n        reset: (state, action) => {\r\n            state.isLoading = false\r\n            state.isSuccess = false\r\n            state.isError = false\r\n            state.isMessage = false\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(login.pending, (state, action) =>{\r\n            state.isLoading = true\r\n            localStorage.removeItem('token')\r\n        })\r\n        .addCase(login.fulfilled, (state, action) =>{\r\n            state.isLoading = false\r\n            state.isSuccess = true\r\n            localStorage.setItem('token', action.payload)\r\n        })\r\n        .addCase(login.rejected, (state, action) =>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isMessage = action.payload\r\n        })\r\n        .addCase(signUp.pending, (state, action) =>{\r\n            state.isLoading = true\r\n            localStorage.removeItem('token')\r\n        })\r\n        .addCase(signUp.fulfilled, (state, action) =>{\r\n            state.isLoading = false\r\n            state.isSuccess = true\r\n            localStorage.setItem('token', action.payload)\r\n        })\r\n        .addCase(signUp.rejected, (state, action) =>{\r\n            state.isLoading = false\r\n            state.isError = true\r\n            state.isMessage = action.payload\r\n        })\r\n    }\r\n})\r\n\r\nexport const { reset } = authSlice.actions\r\nexport default authSlice.reducer","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signUp } from \"../../redux/actions/authAcitons\";\nimport { reset } from \"../../redux/reducers/authReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Spin } from \"antd\";\nimport { openNotificationWithIcon } from \"../../utils/notification\";\n\nconst Register = (props) => {\n  const { isLoading, isSuccess, isError, isMessage } = useSelector(\n    (state) => state.auth\n  );\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isSuccess) navigate(\"/\");\n    if (isError) {\n      openNotificationWithIcon(\"error\", \"Failed\", isMessage);\n    }\n    if (localStorage.getItem(\"token\")) {\n      return navigate(\"/\");\n    }\n    return () => dispatch(reset());\n  }, [isError, isMessage, isSuccess, dispatch, navigate]);\n\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (name === \"\" || email === \"\" || password === \"\") {\n      openNotificationWithIcon(\"info\", \"Please enter all fields\")\n    } else if (password !== password2) {\n      openNotificationWithIcon(\"error\", \"Failed\", \"Passwords do not match\");\n    } else {\n      dispatch(\n        signUp({\n          username: name,\n          email,\n          password,\n          confirmPassword: password2,\n        })\n      );\n    }\n  };\n\n  return (\n    <Spin spinning={isLoading}>\n      <div className=\"form-container\">\n        <h1>\n          Account <span className=\"text-primary\">Register</span>\n        </h1>\n        <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\"><h3>Name</h3></label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\"><h3>Email Address</h3></label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\"><h3>Password</h3></label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={onChange}\n              required\n              minLength=\"6\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password2\"><h3>Confirm Password</h3></label>\n            <input\n              id=\"password2\"\n              type=\"password\"\n              name=\"password2\"\n              value={password2}\n              onChange={onChange}\n              required\n              minLength=\"6\"\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Register\"\n            className=\"btn btn-primary btn-block\"\n          />\n        </form>\n      </div>\n    </Spin>\n  );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { login } from \"../../redux/actions/authAcitons\";\nimport { reset } from \"../../redux/reducers/authReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { openNotificationWithIcon } from \"../../utils/notification\";\nimport { Spin } from \"antd\";\n\nconst Login = () => {\n  const { isLoading, isSuccess, isError, isMessage } = useSelector(\n    (state) => state.auth\n  );\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isError) {\n      openNotificationWithIcon(\"error\", \"Failed\", isMessage);\n    }\n    if (isSuccess) navigate(\"/\");\n\n    if (localStorage.getItem(\"token\")) {\n      return navigate(\"/\");\n    }\n    return () => dispatch(reset());\n  }, [isError, isMessage, isSuccess, dispatch, navigate]);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = user;\n\n  const onChange = (e) => setUser({ ...user, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      openNotificationWithIcon(\"error\", \"Failed\", \"Please fill in all fields\");\n    } else {\n      dispatch(login({ email, password }));\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h1>\n        Account <span className=\"text-primary\">Login</span>\n      </h1>\n      <Spin spinning={isLoading}>\n        <form onSubmit={onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">\n              <h3>Email Address</h3>\n            </label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">\n              <h3>Password</h3>\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={onChange}\n              required\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            className=\"btn btn-primary btn-block\"\n          />\n        </form>\n      </Spin>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { Fragment } from \"react\";\nimport { Navigate } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component }) => {\n  const auth = localStorage.getItem(\"token\");\n  return (\n    <Fragment>{!auth ? <Navigate to=\"/login\" /> : <Component />}</Fragment>\n  );\n};\n\nexport default PrivateRoute;\n\n// const PrivateRoute = ({ component: Component }) => {\n//   // const { }\n// const token = localStorage.getItems('token')\n// {!token ? <Spin/> : <}\n//   const [authState] = useAuth();\n//   const { isAuthenticated, loading } = authState;\n//   if (loading) return <Spinner />;\n//   if (isAuthenticated) return <Component />;\n//   return <Navigate to='/login' />;\n// };\n\n// export default PrivateRoute;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Home from \"./components/pages/Home\";\nimport About from \"./components/pages/About\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Fragment>\n        <Navbar />\n        <div className=\"container\">\n          <Routes>\n            {/* <Route path='/' element={<Home/>} /> */}\n            <Route path=\"/\" element={<PrivateRoute component={Home} />} />\n            <Route path=\"about\" element={<About />} />\n            <Route path=\"register\" element={<Register />} />\n            <Route path=\"/login\" element={<Login />} />\n          </Routes>\n        </div>\n      </Fragment>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./redux/reducers/authReducer\";\r\nimport contactReducer from \"./redux/reducers/contactReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { auth: authReducer, contact: contactReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n   </Provider>\n  ,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}